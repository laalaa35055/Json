{
    "Name": "ASP.Net Web Api",
    "ID": "ASPAPI",
    "Type": 0,
    "Nav": true,
    "Contents": {
        "Left": [
            {
                "Title": "三種方法回傳數據",
                "Content": [
                    {
                        "Title": "指定類型",
                        "Data": [
                            {
                                "Text": "顧名思義就是直接指定回傳型別為原始數據 (string、int、自定義類別)",
                                "URL": null
                            },
                            {
                                "Title": "範例",
                                "Text": "[HttpPost]\npublic ValuesModel GetValueInfo1(ValuesModel model)\n{\n\treturn model;\n}",
                                "Group": true
                            }
                        ]
                    },
                    {
                        "Title": "IActionResult",
                        "Data": [
                            {
                                "Text": "可以使用各種包含 Http Status 的 ObjectResult method",
                                "URL": null
                            },
                            {
                                "Text": "(NotFound / Ok / BadRequest 等)",
                                "URL": null
                            },
                            {
                                "Title": "範例",
                                "Text": "[HttpPost]\npublic IActionResult GetValueInfo2(ValuesModel model)\n{\n\treturn Ok(model);\n}",
                                "Group": true
                            },
                            {
                                "Title": "可以不只回傳一種型別",
                                "Text": "[HttpPost]\npublic IActionResult GetValueInfo2(ValuesModel model)\n{\n\tif (model.MyId == 0)\n\t{\n\t\treturn BadRequest(\"id is not null.\"); //return string\n\t}\n\telse\n\t{\n\t\treturn Ok(model); //return data model\n\t}\n}",
                                "Group": true
                            }
                        ]
                    },
                    {
                        "Title": "ActionResult＜T＞",
                        "Data": [
                            {
                                "Text": "與 IActionResult 一樣可以使用各種包含 Http Status 的 ObjectResult method",
                                "URL": null
                            },
                            {
                                "Text": "可以省略[ProducesResponseType(200)]",
                                "URL": null
                            },
                            {
                                "Text": "return Ok(model);可以省略成寫 return model;",
                                "URL": null
                            },
                            {
                                "Text": "參考網址",
                                "URL": "https://www.dotblogs.com.tw/fire/2022/03/31/180024"
                            }
                        ]
                    }
                ]
            },
            {
                "Title": "使用說明",
                "Content": [
                    {
                        "Title": "Controller",
                        "Data": [
                            {
                                "Text": "[ApiController]",
                                "URL": null
                            },
                            {
                                "Text": "[Route(\"[Controller]\")]",
                                "URL": null
                            }
                        ]
                    },
                    {
                        "Title": "Route",
                        "Data": [
                            {
                                "Text": "[HttpGet(\"{id}\")]",
                                "URL": null
                            },
                            {
                                "Text": "[FromHeader] {string} {id}",
                                "URL": null
                            },
                            {
                                "Text": "[FromBody] {string} {id}",
                                "URL": null
                            },
                            {
                                "Text": "[FromRoute] {string} {id}",
                                "URL": null
                            },
                            {
                                "Title": "Test",
                                "Text": "Test",
                                "Group": true
                            }
                        ]
                    },
                    {
                        "Title": "Authorization",
                        "Data": [
                            {
                                "Text": "app.UseAuthentication();",
                                "URL": null
                            },
                            {
                                "Title": "Test",
                                "Text": "Test",
                                "Group": true
                            }
                        ]
                    }
                ]
            }
        ],
        "Right": [
            {
                "Title": "學習心得",
                "Content": [
                    {
                        "Title": "知識點",
                        "Data": [
                            {
                                "Text": "新手學習網址",
                                "URL": "https://igouist.github.io/post/2021/05/newbie-2-webapi/"
                            },
                            {
                                "Text": "新手教學影片",
                                "URL": "https://www.youtube.com/c/YehKaiCoding"
                            }
                        ]
                    },
                    {
                        "Title": "Entity Framework Core",
                        "Data": [
                            {
                                "Text": "Microsoft.EntityFrameworkCore.SqlServer",
                                "URL": null
                            },
                            {
                                "Text": "Microsoft.EntityFrameworkCore.Tools",
                                "URL": null
                            },
                            {
                                "Text": "Microsoft.EntityFrameworkCore",
                                "URL": null
                            },
                            {
                                "Text": "Ps：Linq",
                                "URL": null
                            },
                            {
                                "Title": "Cli",
                                "Text": "# 本機型\nScaffold-DbContext \"Server=.\\SQLExpress;Database=Northwind;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models -Force -UseDatabaseNames\n\n\n# 複雜型\nScaffold-DbContext \"Data Source=.\\MSSQLSERVER2019;Initial Catalog=db_HAM;Persist Security Info=True;User ID=jb;Password=JB8421;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models\\db_HAMContent -CoNtextDir Models\\db_HAMContent -Force -UseDatabaseNames",
                                "Group": true,
                                "Imgs": [
                                    "https://lh3.googleusercontent.com/pw/AL9nZEXVm5w6TXq8rHi186ykl39L9BjLfG5kEfFRnrBecp40pajdjOSIBdrM4wfUKgzLk1Yu76RHkt0zypL9xjup6-z01ku-S6ghTKh8ZTiBZktKULYw9eFD1dYn8Vf98YvQ7f_3pKtY0872lx86usFSb1Y=w1632-h558-no?authuser=0"
                                ]
                            },
                            {
                                "Text": "檔案網址",
                                "URL": "https://drive.google.com/file/d/1l54VfJ86L2v6OHEZ-DZy1depu_Wy6LQc/view?usp=sharing"
                            },
                            {
                                "Text": "參考網址",
                                "URL": "https://www.uuu.com.tw/Public/content/article/20/20200413.htm"
                            }
                        ]
                    }
                ]
            },
            {
                "Title": "加密",
                "Content": [
                    {
                        "Title": "JWT",
                        "Data": [
                            {
                                "Title": "ConfigureServices 添加",
                                "Text": "services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\n.AddJwtBearer(options =>\n{\n\toptions.TokenValidationParameters = new TokenValidationParameters\n\t{\n\t\tValidateIssuer = true,\n\t\tValidIssuer = Configuration[\"Jwt:Issuer\"],\n\t\tValidateAudience = true,\n\t\tValidAudience = Configuration[\"Jwt:Audience\"],\n\t\tValidateLifetime = true,\n\t\tIssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Configuration[\"JWT:KEY\"]))\n\t};\n});\n\n# appsettings.json\n\n\"JWT\": {\n\t\"KEY\": \"ASDZXASDHAUISDHASDOHAHSDUAHDS\",\n\t\"Issuer\": \"todo.com\",\n\t\"Audience\": \"my\"\n}",
                                "Group": true
                            },
                            {
                                "Title": "Controller 添加",
                                "Text": "# 設定使用者資訊var claims = new List<Claim>\n{\n\tnew Claim(JwtRegisteredClaimNames.Email, user.Account),\n\tnew Claim(\"FullName\", user.Name),\n\tnew Claim(JwtRegisteredClaimNames.NameId, user.EmployeeId.ToString())\n};\n\n# 取出appsettings.json裡的KEY處理\nvar securityKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration[\"JWT:KEY\"]));# 設定jwt相關資訊\n\n# 設定jwt相關資訊\nvar jwt = new JwtSecurityToken\n{\n\tissuer: _configuration[\"JWT:Issuer\"],\n\taudience: _configuration[\"JWT:Audience\"],\n\tclaims: claims,\n\texpires: DateTime.Now.AddMinutes(30),\n\tsigningCredentials: new SigningCredentials(securityKey, SecurityAlgorithms.HmacSha256)\n);\n\n# 產生JWT Token\nvar token = new JwtSecurityTokenHandler().WriteToken(jwt);",
                                "Group": true
                            },
                            {
                                "Text": "Microsoft.AspNetCore.Authentication.JwtBearer",
                                "URL": null
                            },
                            {
                                "Text": "System.IdentityModel.Tokens.Jwt",
                                "URL": null
                            },
                            {
                                "Title": "Tip",
                                "Text": "# ClockSkew = TimeSpan.Zero\n\nres: DateTime.Now.AddSeconds(10)\n\n[Authorize(Roles = \"test\")]\n\npublic readonly IConfiguration _configuration;",
                                "Group": true
                            },
                            {
                                "Text": "參考網址",
                                "URL": "https://blog.miniasp.com/post/2019/12/16/How-to-use-JWT-token-based-auth-in-aspnet-core-31"
                            },
                            {
                                "Text": "參考網址-2",
                                "URL": "https://blog.talllkai.com/ASPNETCore/2021/09/15/JWT"
                            }
                        ]
                    },
                    {
                        "Title": "Cookies",
                        "Data": [
                            {
                                "Title": "解決方法",
                                "Text": "# Configure\napp.UseCookiePolicy();\napp.UseAuthentication();\napp.UseAuthorization();\n\n# ConfigureServices\nservices.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme).AddCookie(option =>\n{\n\toption.LoginPath = new PathString(\"/api/Login/NoLogin\");\n}",
                                "Group": true
                            },
                            {
                                "Text": "參考網址",
                                "URL": ""
                            }
                        ]
                    }
                ]
            },
            {
                "Title": "Linq",
                "Content": [
                    {
                        "Title": "Linq 起手式",
                        "Data": [
                            {
                                "Title": "宣告式",
                                "Text": "from a in {Context.table} where a.Name == 'test' select a;",
                                "Group": true
                            },
                            {
                                "Title": "編程式",
                                "Text": "Context.table.where(a=>a.Name='test');",
                                "Group": true
                            },
                            {
                                "Text": "可混搭",
                                "URL": null
                            }
                        ]
                    },
                    {
                        "Title": "Linq 使用方法",
                        "Data": [
                            {
                                "Text": "Contains：不完全配對，類似於 where",
                                "URL": null
                            }
                        ]
                    }
                ]
            },
            {
                "Title": "問題集",
                "Content": [
                    {
                        "Title": "interface、abstract、virtual 區別 ？",
                        "Data": [
                            {
                                "Title": "interface、abstract、virtual 區別",
                                "Text": "# 抽象類別中可以定義抽象方法但不能實作且必須為公開(public)\n# 繼承抽象類別的子類必須複寫父類的的抽象方法\n\n# 虛擬方法必須實作\n# 虛擬方法中必須為公開(public)\n# 子類別可以直接引用或選擇複寫(override)虛擬方法\n\n# 介面只能宣告，不能實作，且只能為公開(public)\n# 介面不可以繼承類別\n# 繼承介面的類別必須實作所有的屬性與方法。",
                                "Group": true
                            },
                            {
                                "Text": "參考網址",
                                "URL": "https://ad57475747.medium.com/c-%E9%9B%9C%E8%A8%98-%E4%BB%8B%E9%9D%A2-interface-%E6%8A%BD%E8%B1%A1-abstract-%E8%99%9B%E6%93%AC-virtual-%E4%B9%8B%E6%88%91%E8%A6%8B-dc3c5878bb80"
                            }
                        ]
                    },
                    {
                        "Title": "解決 API 跨域問題",
                        "Data": [
                            {
                                "Title": "解決方法",
                                "Text": "# 在 ConfigureServices 中添加\n\nservices.AddCors(options =>{ \n\toptions.AddPolicy(\"CorsPolicy\",builder =>{\n\t\n\t\tbuilder.AllowAnyOrigin()\n\t\t\t.AllowAnyMethod()\n\t\t\t.AllowAnyHeader();\n\t});\n});\n\n# 在 Configure 中加入\napp.UseCors(\"CorsPolicy\");",
                                "Group": true
                            },
                            {
                                "Text": "參考網址",
                                "URL": "https://blog.csdn.net/HerryDong/article/details/124234605"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "Source": {
        "Text": true,
        "From": [],
        "Refer": []
    }
}